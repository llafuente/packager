#!/bin/bash

# initial setup for my aws clients after `aws configure`

set -e
set -x

source ./utils.sh
aws_prerequisites

echo "Using account: ${AWS_CLIENT_PEM}"

aws ec2 create-key-pair --key-name $AWS_CLIENT_PEM --query 'KeyMaterial' --output text > ~/.ssh/${AWS_CLIENT_PEM}.pem
chmod 400 ~/.ssh/${AWS_CLIENT_PEM}.pem

aws ec2 describe-key-pairs --key-name $AWS_CLIENT_PEM


aws ec2 create-security-group --group-name webserver --description "open port 80/443"
aws ec2 create-security-group --group-name dbserver --description "open port 3306"
aws ec2 create-security-group --group-name administrable --description "open everything to admin ips"

aws ec2 authorize-security-group-ingress --group-name dbserver --protocol tcp --port 3306 --source-group webserver

aws ec2 authorize-security-group-ingress --group-name webserver --protocol tcp --port 80 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-name webserver --protocol tcp --port 443 --cidr 0.0.0.0/0

aws iam create-role \
  --role-name lambda-cronuser-role \
  --assume-role-policy-document "file://$(pwd)lambda-cronuser-role-trust.json"

aws iam put-role-policy \
  --role-name lambda-cronuser-role \
  --policy-name Ec2FullAccess --policy-document "file://$(pwd)/ec2-full-access-policy.json"


# aws iam update-assume-role-policy \
#   --role-name lambda-cronuser-role \
#   --policy-document "file://$(pwd)/lambda-cronuser-role-trust.json"
# aws iam delete-role --role-name lambda-cronuser-role

# NOTE unused ATM
# for lambda s3 usage, i prefer zip deploy atm
aws s3api create-bucket \
  --bucket "${AWS_CLIENT_ID}-aws-lambda" \
  --acl private \
  --region eu-west-1 \
  --create-bucket-configuration "LocationConstraint=EU"

# Run at 6:00/18:00 am (UTC) every day
aws events put-rule \
--name twice-day \
--schedule-expression 'cron(0 6/12 * * ? *)'

# Run at 5:00 am (UTC) every day
aws events put-rule \
  --name "daily" \
  --schedule-expression "cron(0 5 * * ? *)" \
  --state ENABLED

# Run at 4:00 am (UTC) every sunday
aws events put-rule \
--name weekly \
--schedule-expression 'cron(0 4 * * SUN *)'

# Run at 3:00 am (UTC) every 1st of each month
aws events put-rule \
--name monthly \
--schedule-expression 'cron(0 3 1 * ? *)'
